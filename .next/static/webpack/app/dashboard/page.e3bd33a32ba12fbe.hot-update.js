"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateCompletionPercentage: function() { return /* binding */ calculateCompletionPercentage; },\n/* harmony export */   capitalize: function() { return /* binding */ capitalize; },\n/* harmony export */   cn: function() { return /* binding */ cn; },\n/* harmony export */   daysUntil: function() { return /* binding */ daysUntil; },\n/* harmony export */   debounce: function() { return /* binding */ debounce; },\n/* harmony export */   enumToDisplayText: function() { return /* binding */ enumToDisplayText; },\n/* harmony export */   formatBytes: function() { return /* binding */ formatBytes; },\n/* harmony export */   formatDate: function() { return /* binding */ formatDate; },\n/* harmony export */   formatDateTime: function() { return /* binding */ formatDateTime; },\n/* harmony export */   generateChartColors: function() { return /* binding */ generateChartColors; },\n/* harmony export */   getInitials: function() { return /* binding */ getInitials; },\n/* harmony export */   getPriorityColor: function() { return /* binding */ getPriorityColor; },\n/* harmony export */   getRoleColor: function() { return /* binding */ getRoleColor; },\n/* harmony export */   getStatusColor: function() { return /* binding */ getStatusColor; },\n/* harmony export */   groupBy: function() { return /* binding */ groupBy; },\n/* harmony export */   isOverdue: function() { return /* binding */ isOverdue; },\n/* harmony export */   multiSort: function() { return /* binding */ multiSort; },\n/* harmony export */   truncateText: function() { return /* binding */ truncateText; }\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n\n\n/**\r\n * Merge Tailwind CSS classes with clsx\r\n */ function cn() {\n    for(var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++){\n        inputs[_key] = arguments[_key];\n    }\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n/**\r\n * Format date to readable string\r\n */ function formatDate(date, options) {\n    const dateObj = typeof date === \"string\" ? new Date(date) : date;\n    return dateObj.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        ...options\n    });\n}\n/**\r\n * Format date and time to readable string\r\n */ function formatDateTime(date) {\n    const dateObj = typeof date === \"string\" ? new Date(date) : date;\n    return dateObj.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n    });\n}\n/**\r\n * Calculate days until date\r\n */ function daysUntil(date) {\n    const targetDate = typeof date === \"string\" ? new Date(date) : date;\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    targetDate.setHours(0, 0, 0, 0);\n    const diffTime = targetDate.getTime() - today.getTime();\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n}\n/**\r\n * Check if date is overdue\r\n */ function isOverdue(date) {\n    return daysUntil(date) < 0;\n}\n/**\r\n * Capitalize first letter of string\r\n */ function capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n/**\r\n * Convert enum value to display text\r\n */ function enumToDisplayText(value) {\n    return value.split(\"_\").map((word)=>capitalize(word.toLowerCase())).join(\" \");\n}\n/**\r\n * Get priority color class with enhanced visibility - black text for maximum contrast\r\n */ function getPriorityColor(priority) {\n    switch(priority.toLowerCase()){\n        case \"low\":\n            return \"text-black bg-green-200 border-green-400\";\n        case \"medium\":\n            return \"text-black bg-yellow-200 border-yellow-400\";\n        case \"high\":\n            return \"text-black bg-orange-200 border-orange-400\";\n        case \"critical\":\n        case \"urgent\":\n            return \"text-black bg-red-200 border-red-400\";\n        default:\n            return \"text-black bg-gray-200 border-gray-400\";\n    }\n}\n/**\r\n * Get status color class with enhanced visibility\r\n */ function getStatusColor(status) {\n    switch(status.toLowerCase()){\n        case \"planning\":\n        case \"todo\":\n            return \"text-black bg-gray-100 border-gray-400\";\n        case \"in_progress\":\n            return \"text-black bg-blue-100 border-blue-400\";\n        case \"review\":\n        case \"testing\":\n            return \"text-black bg-yellow-100 border-yellow-400\";\n        case \"completed\":\n            return \"text-black bg-green-100 border-green-400\";\n        case \"on_hold\":\n        case \"blocked\":\n            return \"text-black bg-orange-100 border-orange-400\";\n        case \"cancelled\":\n            return \"text-black bg-red-100 border-red-400\";\n        default:\n            return \"text-black bg-gray-100 border-gray-400\";\n    }\n}\n/**\r\n * Calculate completion percentage\r\n */ function calculateCompletionPercentage(completed, total) {\n    if (total === 0) return 0;\n    return Math.round(completed / total * 100);\n}\n/**\r\n * Format bytes to human readable size\r\n */ function formatBytes(bytes) {\n    let decimals = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\n        \"Bytes\",\n        \"KB\",\n        \"MB\",\n        \"GB\",\n        \"TB\"\n    ];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n}\n/**\r\n * Debounce function\r\n */ function debounce(func, wait) {\n    let timeout;\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(()=>func(...args), wait);\n    };\n}\n/**\r\n * Generate avatar initials from name\r\n */ function getInitials(firstName, lastName) {\n    return \"\".concat(firstName.charAt(0)).concat(lastName.charAt(0)).toUpperCase();\n}\n/**\r\n * Get user role color\r\n */ function getRoleColor(role) {\n    switch(role.toLowerCase()){\n        case \"admin\":\n            return \"text-purple-600 bg-purple-50 border-purple-200\";\n        case \"manager\":\n            return \"text-blue-600 bg-blue-50 border-blue-200\";\n        case \"team_member\":\n            return \"text-green-600 bg-green-50 border-green-200\";\n        default:\n            return \"text-gray-600 bg-gray-50 border-gray-200\";\n    }\n}\n/**\r\n * Truncate text with ellipsis\r\n */ function truncateText(text, maxLength) {\n    if (text.length <= maxLength) return text;\n    return text.slice(0, maxLength) + \"...\";\n}\n/**\r\n * Generate random color for charts\r\n */ function generateChartColors(count) {\n    const colors = [\n        \"#3B82F6\",\n        \"#10B981\",\n        \"#F59E0B\",\n        \"#EF4444\",\n        \"#8B5CF6\",\n        \"#06B6D4\",\n        \"#84CC16\",\n        \"#F97316\",\n        \"#EC4899\",\n        \"#6366F1\"\n    ];\n    return Array.from({\n        length: count\n    }, (_, i)=>colors[i % colors.length]);\n}\n/**\r\n * Sort array by multiple criteria\r\n */ function multiSort(array, sortBy) {\n    return [\n        ...array\n    ].sort((a, b)=>{\n        for (const { key, direction } of sortBy){\n            const aVal = a[key];\n            const bVal = b[key];\n            if (aVal < bVal) return direction === \"asc\" ? -1 : 1;\n            if (aVal > bVal) return direction === \"asc\" ? 1 : -1;\n        }\n        return 0;\n    });\n}\n/**\r\n * Group array by key\r\n */ function groupBy(array, key) {\n    return array.reduce((groups, item)=>{\n        const group = String(item[key]);\n        groups[group] = groups[group] || [];\n        groups[group].push(item);\n        return groups;\n    }, {});\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/utils.ts\n"));

/***/ })

});